var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/LRU.html",[0,0.62,1,0.891]],["body/classes/LRU.html",[0,0.503,1,1.034,2,1.463,3,1.463,4,1.463,5,1.016,6,1.016,7,0.503,8,2.094,9,3.151,10,2.446,11,2.825,12,2.094,13,2.67,14,2.67,15,2.094,16,1.463,17,2.094,18,1.112,19,3.027,20,2.094,21,2.446,22,0.137,23,2.446,24,1.395,25,2.446,26,2.825,27,1.016,28,1.395,29,1.699,30,1.463,31,1.463,32,1.855,33,1.699,34,2.094,35,1.01,36,1.463,37,2.094,38,1.463,39,2.094,40,1.463,41,1.463,42,2.094,43,2.094,44,1.463,45,2.094,46,1.016,47,2.446,48,1.463,49,2.094,50,2.094,51,1.455,52,1.463,53,1.463,54,1.463,55,0.056,56,0.081,57,0.056]],["title/coverage.html",[58,1.683]],["body/coverage.html",[0,0.622,1,0.894,5,1.258,6,1.258,18,0.622,22,0.134,24,0.894,29,1.258,35,0.622,55,0.07,56,0.094,57,0.07,58,1.258,59,1.258,60,1.81,61,1.81,62,1.708,63,1.81,64,1.258,65,3.445,66,0.894,67,3.445,68,1.258,69,1.199,70,1.258,71,0.894,72,1.258,73,0.894,74,1.258,75,0.894,76,1.258,77,0.894,78,1.258,79,0.894,80,1.258,81,0.894,82,1.258,83,1.258,84,0.894,85,1.258,86,0.894,87,1.258,88,1.258,89,1.258,90,1.258,91,1.258,92,1.258,93,1.81,94,1.81]],["title/index.html",[7,0.525,95,0.754,96,1.061]],["body/index.html",[7,0.605,18,1.135,22,0.136,28,0.869,32,1.876,35,0.994,46,2.059,55,0.045,56,0.068,57,0.045,62,0.571,66,1.386,69,1.386,71,1.463,73,1.052,75,1.333,77,0.869,79,1.176,81,1.052,84,0.869,86,0.869,95,0.571,97,1.76,98,1.156,99,1.76,100,1.76,101,1.156,102,1.156,103,1.156,104,1.156,105,1.156,106,1.156,107,1.156,108,1.156,109,2.963,110,2.892,111,1.156,112,1.156,113,1.156,114,1.156,115,1.76,116,1.156,117,1.156,118,2.806,119,1.223,120,0.803,121,1.156,122,0.803,123,1.156,124,2.806,125,0.869,126,1.223,127,1.156,128,1.156,129,1.156,130,1.156,131,1.156,132,1.156,133,1.76,134,1.156,135,1.156,136,1.156,137,1.76,138,1.223,139,1.76,140,1.76,141,1.156,142,1.156,143,1.156,144,1.156,145,1.156,146,1.156,147,1.156,148,2.381,149,0.803,150,1.156,151,1.156,152,1.76,153,1.156,154,1.223,155,1.156,156,1.156,157,1.156,158,1.156,159,1.156,160,1.156,161,1.156,162,1.76,163,1.76,164,2.13,165,1.156,166,1.156,167,1.223,168,1.156,169,1.156,170,1.156,171,1.156,172,1.156,173,1.156,174,1.156,175,0.803,176,1.156,177,1.156,178,1.156,179,0.803,180,0.803,181,0.803,182,1.156,183,1.156,184,1.156]],["title/license.html",[95,0.754,96,1.061,185,1.061]],["body/license.html",[22,0.108,55,0.073,56,0.096,57,0.073,59,1.313,138,1.313,179,1.944,180,1.313,181,1.313,185,1.313,186,1.89,187,2.498,188,1.89,189,1.89,190,1.89,191,1.89,192,1.89,193,1.89,194,2.498,195,3.332,196,1.89,197,1.89,198,1.89,199,2.798,200,1.89,201,2.498,202,1.89,203,1.89,204,2.498,205,1.89,206,1.89,207,1.89,208,1.89,209,1.89,210,1.89,211,1.89,212,2.498,213,1.89,214,1.89,215,1.89,216,1.89,217,1.89,218,1.89,219,1.89,220,2.498,221,2.498,222,1.89,223,1.89,224,1.89,225,1.89,226,1.89,227,1.89,228,1.89,229,1.89,230,1.89,231,1.89,232,1.89,233,1.89,234,1.89,235,1.89,236,1.89,237,1.89,238,1.89,239,1.89,240,1.89,241,1.89,242,1.89,243,1.89,244,1.89,245,1.89,246,1.89,247,1.89,248,1.89,249,1.89,250,1.89,251,1.89]],["title/modules.html",[252,1.683]],["body/modules.html",[22,0.121,55,0.105,56,0.121,57,0.105,252,1.901]],["title/overview.html",[253,1.683]],["body/overview.html",[0,0.931,22,0.12,55,0.104,56,0.12,57,0.104,125,1.338,253,1.882]],["title/miscellaneous/variables.html",[254,1.061,255,1.5]],["body/miscellaneous/variables.html",[7,0.421,18,1.084,22,0.138,24,1.454,27,2.257,28,1.604,33,0.851,35,0.948,51,1.989,55,0.047,56,0.071,57,0.047,62,1.09,64,0.851,66,0.908,68,0.851,69,1.363,70,0.851,71,1.298,72,0.851,73,1.09,74,0.851,75,1.211,76,0.851,77,1.09,78,0.851,79,1.09,80,0.851,81,0.908,82,0.851,83,0.851,84,1.09,85,0.851,86,1.09,87,0.851,88,0.851,89,0.851,90,1.277,91,0.851,92,1.277,119,0.851,120,1.277,122,0.851,125,0.605,126,0.851,149,0.851,154,1.704,167,1.533,175,0.851,254,0.851,255,0.851,256,2.76,257,1.225,258,1.225,259,1.225,260,1.225,261,1.225,262,1.838,263,1.225,264,1.225,265,2.76,266,1.225,267,1.838,268,1.225,269,1.225,270,1.225,271,1.225,272,1.225,273,1.225,274,1.225,275,2.206,276,1.225,277,1.225,278,1.225,279,1.225,280,1.225]]],"invertedIndex":[["",{"_index":22,"title":{},"body":{"classes/LRU.html":{},"coverage.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":62,"title":{},"body":{"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["0.5",{"_index":273,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0/1",{"_index":67,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":63,"title":{},"body":{"coverage.html":{}}}],["05",{"_index":145,"title":{},"body":{"index.html":{}}}],["1",{"_index":125,"title":{},"body":{"index.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["17t00:00:00",{"_index":146,"title":{},"body":{"index.html":{}}}],["2",{"_index":126,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["2$number",{"_index":151,"title":{},"body":{"index.html":{}}}],["2))table",{"_index":112,"title":{},"body":{"index.html":{}}}],["2.12$string",{"_index":173,"title":{},"body":{"index.html":{}}}],["2021",{"_index":181,"title":{},"body":{"index.html":{},"license.html":{}}}],["3",{"_index":127,"title":{},"body":{"index.html":{}}}],["3,2,1]$boolean",{"_index":131,"title":{},"body":{"index.html":{}}}],["6",{"_index":270,"title":{},"body":{"miscellaneous/variables.html":{}}}],["__name__",{"_index":271,"title":{},"body":{"miscellaneous/variables.html":{}}}],["__version__",{"_index":280,"title":{},"body":{"miscellaneous/variables.html":{}}}],["above",{"_index":219,"title":{},"body":{"license.html":{}}}],["action",{"_index":244,"title":{},"body":{"license.html":{}}}],["add",{"_index":105,"title":{},"body":{"index.html":{}}}],["and/or",{"_index":210,"title":{},"body":{"license.html":{}}}],["api",{"_index":115,"title":{},"body":{"index.html":{}}}],["appear",{"_index":168,"title":{},"body":{"index.html":{}}}],["arbitrary",{"_index":155,"title":{},"body":{"index.html":{}}}],["args",{"_index":149,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["args.length",{"_index":268,"title":{},"body":{"miscellaneous/variables.html":{}}}],["args.reduce((a",{"_index":266,"title":{},"body":{"miscellaneous/variables.html":{}}}],["arguments",{"_index":148,"title":{},"body":{"index.html":{}}}],["arising",{"_index":248,"title":{},"body":{"license.html":{}}}],["arr",{"_index":119,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["arr.length",{"_index":129,"title":{},"body":{"index.html":{}}}],["array",{"_index":66,"title":{},"body":{"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["associated",{"_index":196,"title":{},"body":{"license.html":{}}}],["authors",{"_index":237,"title":{},"body":{"license.html":{}}}],["average",{"_index":79,"title":{},"body":{"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["b",{"_index":267,"title":{},"body":{"miscellaneous/variables.html":{}}}],["boolean",{"_index":71,"title":{},"body":{"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["c",{"_index":180,"title":{},"body":{"index.html":{},"license.html":{}}}],["cache",{"_index":10,"title":{},"body":{"classes/LRU.html":{}}}],["capacity",{"_index":11,"title":{},"body":{"classes/LRU.html":{}}}],["cba'license",{"_index":178,"title":{},"body":{"index.html":{}}}],["characters",{"_index":174,"title":{},"body":{"index.html":{}}}],["charge",{"_index":191,"title":{},"body":{"license.html":{}}}],["check",{"_index":137,"title":{},"body":{"index.html":{}}}],["claim",{"_index":240,"title":{},"body":{"license.html":{}}}],["class",{"_index":0,"title":{"classes/LRU.html":{}},"body":{"classes/LRU.html":{},"coverage.html":{},"overview.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/LRU.html":{}}}],["clear",{"_index":13,"title":{},"body":{"classes/LRU.html":{}}}],["conditions",{"_index":218,"title":{},"body":{"license.html":{}}}],["connection",{"_index":250,"title":{},"body":{"license.html":{}}}],["console.log(arr",{"_index":130,"title":{},"body":{"index.html":{}}}],["console.log(average(1,2,3",{"_index":150,"title":{},"body":{"index.html":{}}}],["console.log(iseven(2",{"_index":158,"title":{},"body":{"index.html":{}}}],["console.log(iseven(3",{"_index":159,"title":{},"body":{"index.html":{}}}],["console.log(isweekday(new",{"_index":143,"title":{},"body":{"index.html":{}}}],["console.log(random",{"_index":135,"title":{},"body":{"index.html":{}}}],["console.log(reverse(\"abc",{"_index":177,"title":{},"body":{"index.html":{}}}],["console.log(tofixed(1.123",{"_index":111,"title":{},"body":{"index.html":{}}}],["console.log(tofixed(2.123",{"_index":172,"title":{},"body":{"index.html":{}}}],["const",{"_index":46,"title":{},"body":{"classes/LRU.html":{},"index.html":{}}}],["constructor",{"_index":16,"title":{},"body":{"classes/LRU.html":{}}}],["constructor(capacity",{"_index":17,"title":{},"body":{"classes/LRU.html":{}}}],["contents",{"_index":113,"title":{},"body":{"index.html":{}}}],["contract",{"_index":245,"title":{},"body":{"license.html":{}}}],["convenience",{"_index":98,"title":{},"body":{"index.html":{}}}],["copies",{"_index":212,"title":{},"body":{"license.html":{}}}],["copy",{"_index":194,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":179,"title":{},"body":{"index.html":{},"license.html":{}}}],["coverage",{"_index":58,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["damages",{"_index":241,"title":{},"body":{"license.html":{}}}],["date",{"_index":75,"title":{},"body":{"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["date('2021",{"_index":144,"title":{},"body":{"index.html":{}}}],["date.getday",{"_index":269,"title":{},"body":{"miscellaneous/variables.html":{}}}],["day",{"_index":139,"title":{},"body":{"index.html":{}}}],["deal",{"_index":198,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":251,"title":{},"body":{"license.html":{}}}],["decimal",{"_index":163,"title":{},"body":{"index.html":{}}}],["default",{"_index":27,"title":{},"body":{"classes/LRU.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":19,"title":{},"body":{"classes/LRU.html":{}}}],["dengfengwang/utils",{"_index":109,"title":{},"body":{"index.html":{}}}],["dengfengwang/utilsor",{"_index":103,"title":{},"body":{"index.html":{}}}],["dengfengwang/utilsusage",{"_index":106,"title":{},"body":{"index.html":{}}}],["digits",{"_index":167,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["distribute",{"_index":208,"title":{},"body":{"license.html":{}}}],["documentation",{"_index":59,"title":{},"body":{"coverage.html":{},"license.html":{}}}],["end",{"_index":122,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["ending",{"_index":123,"title":{},"body":{"index.html":{}}}],["even",{"_index":152,"title":{},"body":{"index.html":{}}}],["event",{"_index":236,"title":{},"body":{"license.html":{}}}],["example",{"_index":124,"title":{},"body":{"index.html":{}}}],["export",{"_index":41,"title":{},"body":{"classes/LRU.html":{}}}],["express",{"_index":227,"title":{},"body":{"license.html":{}}}],["false",{"_index":134,"title":{},"body":{"index.html":{}}}],["false.tofixed",{"_index":160,"title":{},"body":{"index.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/LRU.html":{},"coverage.html":{}}}],["files",{"_index":197,"title":{},"body":{"license.html":{}}}],["fitness",{"_index":232,"title":{},"body":{"license.html":{}}}],["fixed",{"_index":162,"title":{},"body":{"index.html":{}}}],["following",{"_index":217,"title":{},"body":{"license.html":{}}}],["formatted",{"_index":166,"title":{},"body":{"index.html":{}}}],["free",{"_index":190,"title":{},"body":{"license.html":{}}}],["furnished",{"_index":215,"title":{},"body":{"license.html":{}}}],["get(key",{"_index":34,"title":{},"body":{"classes/LRU.html":{}}}],["getting",{"_index":95,"title":{"index.html":{},"license.html":{}},"body":{"index.html":{}}}],["given",{"_index":169,"title":{},"body":{"index.html":{}}}],["granted",{"_index":189,"title":{},"body":{"license.html":{}}}],["hereby",{"_index":188,"title":{},"body":{"license.html":{}}}],["holders",{"_index":238,"title":{},"body":{"license.html":{}}}],["identifier",{"_index":60,"title":{},"body":{"coverage.html":{}}}],["implied",{"_index":228,"title":{},"body":{"license.html":{}}}],["import",{"_index":110,"title":{},"body":{"index.html":{}}}],["import(or",{"_index":107,"title":{},"body":{"index.html":{}}}],["included",{"_index":222,"title":{},"body":{"license.html":{}}}],["including",{"_index":201,"title":{},"body":{"license.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"classes/LRU.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/LRU.html":{}}}],["init",{"_index":14,"title":{},"body":{"classes/LRU.html":{}}}],["install",{"_index":101,"title":{},"body":{"index.html":{}}}],["installation",{"_index":99,"title":{},"body":{"index.html":{}}}],["integer",{"_index":156,"title":{},"body":{"index.html":{}}}],["iseven",{"_index":84,"title":{},"body":{"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["isweekday",{"_index":77,"title":{},"body":{"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["key",{"_index":37,"title":{},"body":{"classes/LRU.html":{}}}],["kind",{"_index":226,"title":{},"body":{"license.html":{}}}],["liability",{"_index":242,"title":{},"body":{"license.html":{}}}],["liable",{"_index":239,"title":{},"body":{"license.html":{}}}],["license",{"_index":185,"title":{"license.html":{}},"body":{"license.html":{}}}],["limitation",{"_index":202,"title":{},"body":{"license.html":{}}}],["limited",{"_index":229,"title":{},"body":{"license.html":{}}}],["lru",{"_index":1,"title":{"classes/LRU.html":{}},"body":{"classes/LRU.html":{},"coverage.html":{}}}],["map",{"_index":26,"title":{},"body":{"classes/LRU.html":{}}}],["matching",{"_index":56,"title":{},"body":{"classes/LRU.html":{},"coverage.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["math",{"_index":81,"title":{},"body":{"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["math.floor(math.pow(10",{"_index":278,"title":{},"body":{"miscellaneous/variables.html":{}}}],["math.pow(10",{"_index":279,"title":{},"body":{"miscellaneous/variables.html":{}}}],["math.random",{"_index":272,"title":{},"body":{"miscellaneous/variables.html":{}}}],["merchantability",{"_index":231,"title":{},"body":{"license.html":{}}}],["merge",{"_index":206,"title":{},"body":{"license.html":{}}}],["methods",{"_index":12,"title":{},"body":{"classes/LRU.html":{}}}],["miscellaneous",{"_index":254,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["mit",{"_index":186,"title":{},"body":{"license.html":{}}}],["modify",{"_index":205,"title":{},"body":{"license.html":{}}}],["modules",{"_index":252,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["name",{"_index":23,"title":{},"body":{"classes/LRU.html":{}}}],["needed",{"_index":165,"title":{},"body":{"index.html":{}}}],["new",{"_index":29,"title":{},"body":{"classes/LRU.html":{},"coverage.html":{}}}],["noninfringement",{"_index":235,"title":{},"body":{"license.html":{}}}],["not(a",{"_index":141,"title":{},"body":{"index.html":{}}}],["not(odd",{"_index":157,"title":{},"body":{"index.html":{}}}],["notation",{"_index":171,"title":{},"body":{"index.html":{}}}],["notice",{"_index":220,"title":{},"body":{"license.html":{}}}],["npm",{"_index":100,"title":{},"body":{"index.html":{}}}],["num",{"_index":154,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":18,"title":{},"body":{"classes/LRU.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["object",{"_index":265,"title":{},"body":{"miscellaneous/variables.html":{}}}],["obtaining",{"_index":193,"title":{},"body":{"license.html":{}}}],["odd",{"_index":153,"title":{},"body":{"index.html":{}}}],["optional",{"_index":25,"title":{},"body":{"classes/LRU.html":{}}}],["otherwise",{"_index":247,"title":{},"body":{"license.html":{}}}],["out",{"_index":249,"title":{},"body":{"license.html":{}}}],["overview",{"_index":253,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["parameters",{"_index":21,"title":{},"body":{"classes/LRU.html":{}}}],["params",{"_index":118,"title":{},"body":{"index.html":{}}}],["particular",{"_index":233,"title":{},"body":{"license.html":{}}}],["permission",{"_index":187,"title":{},"body":{"license.html":{}}}],["permit",{"_index":213,"title":{},"body":{"license.html":{}}}],["person",{"_index":192,"title":{},"body":{"license.html":{}}}],["persons",{"_index":214,"title":{},"body":{"license.html":{}}}],["pkg_name",{"_index":90,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["place",{"_index":117,"title":{},"body":{"index.html":{}}}],["point",{"_index":164,"title":{},"body":{"index.html":{}}}],["portions",{"_index":224,"title":{},"body":{"license.html":{}}}],["present",{"_index":182,"title":{},"body":{"index.html":{}}}],["private",{"_index":9,"title":{},"body":{"classes/LRU.html":{}}}],["properties",{"_index":8,"title":{},"body":{"classes/LRU.html":{}}}],["provided",{"_index":138,"title":{},"body":{"index.html":{},"license.html":{}}}],["publish",{"_index":207,"title":{},"body":{"license.html":{}}}],["purpose",{"_index":234,"title":{},"body":{"license.html":{}}}],["put",{"_index":15,"title":{},"body":{"classes/LRU.html":{}}}],["put(key",{"_index":39,"title":{},"body":{"classes/LRU.html":{}}}],["random",{"_index":73,"title":{},"body":{"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["require",{"_index":108,"title":{},"body":{"index.html":{}}}],["restriction",{"_index":200,"title":{},"body":{"license.html":{}}}],["result",{"_index":55,"title":{},"body":{"classes/LRU.html":{},"coverage.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":57,"title":{},"body":{"classes/LRU.html":{},"coverage.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":51,"title":{},"body":{"classes/LRU.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":32,"title":{},"body":{"classes/LRU.html":{},"index.html":{}}}],["reverse",{"_index":69,"title":{},"body":{"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["reverse(arr",{"_index":128,"title":{},"body":{"index.html":{}}}],["reversed",{"_index":176,"title":{},"body":{"index.html":{}}}],["reversedstr",{"_index":275,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reverses",{"_index":116,"title":{},"body":{"index.html":{}}}],["rights",{"_index":203,"title":{},"body":{"license.html":{}}}],["save",{"_index":102,"title":{},"body":{"index.html":{}}}],["sell",{"_index":211,"title":{},"body":{"license.html":{}}}],["shall",{"_index":221,"title":{},"body":{"license.html":{}}}],["software",{"_index":195,"title":{},"body":{"license.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/LRU.html":{}}}],["src/.../average.ts",{"_index":257,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../index.ts",{"_index":256,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../iseven.ts",{"_index":258,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../isweekday.ts",{"_index":259,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../name.ts",{"_index":260,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../random.ts",{"_index":261,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../reverse.ts",{"_index":262,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../tofixed.ts",{"_index":263,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../version.ts",{"_index":264,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/cache/lru.ts",{"_index":6,"title":{},"body":{"classes/LRU.html":{},"coverage.html":{}}}],["src/cache/lru.ts:10",{"_index":38,"title":{},"body":{"classes/LRU.html":{}}}],["src/cache/lru.ts:14",{"_index":36,"title":{},"body":{"classes/LRU.html":{}}}],["src/cache/lru.ts:2",{"_index":30,"title":{},"body":{"classes/LRU.html":{}}}],["src/cache/lru.ts:25",{"_index":40,"title":{},"body":{"classes/LRU.html":{}}}],["src/cache/lru.ts:3",{"_index":20,"title":{},"body":{"classes/LRU.html":{}}}],["src/cache/lru.ts:34",{"_index":31,"title":{},"body":{"classes/LRU.html":{}}}],["src/core/array/index.ts",{"_index":64,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/core/array/reverse.ts",{"_index":68,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/core/boolean/index.ts",{"_index":70,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/core/boolean/random.ts",{"_index":72,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/core/date/index.ts",{"_index":74,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/core/date/isweekday.ts",{"_index":76,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/core/math/average.ts",{"_index":78,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/core/math/index.ts",{"_index":80,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/core/number/index.ts",{"_index":82,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/core/number/iseven.ts",{"_index":83,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/core/number/tofixed.ts",{"_index":85,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/core/string/index.ts",{"_index":87,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/core/string/reverse.ts",{"_index":88,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/info/name.ts",{"_index":89,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/info/version.ts",{"_index":91,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":120,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["started",{"_index":96,"title":{"index.html":{},"license.html":{}},"body":{}}],["starting",{"_index":121,"title":{},"body":{"index.html":{}}}],["statements",{"_index":61,"title":{},"body":{"coverage.html":{}}}],["str",{"_index":175,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["str.length",{"_index":276,"title":{},"body":{"miscellaneous/variables.html":{}}}],["str.split('').reverse().join",{"_index":274,"title":{},"body":{"miscellaneous/variables.html":{}}}],["str[i",{"_index":277,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string",{"_index":35,"title":{},"body":{"classes/LRU.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["subject",{"_index":216,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":209,"title":{},"body":{"license.html":{}}}],["substantial",{"_index":223,"title":{},"body":{"license.html":{}}}],["table",{"_index":94,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":93,"title":{},"body":{"coverage.html":{}}}],["temp",{"_index":47,"title":{},"body":{"classes/LRU.html":{}}}],["this.cache",{"_index":44,"title":{},"body":{"classes/LRU.html":{}}}],["this.cache.delete(key",{"_index":49,"title":{},"body":{"classes/LRU.html":{}}}],["this.cache.delete(this.cache.keys().next().value",{"_index":54,"title":{},"body":{"classes/LRU.html":{}}}],["this.cache.get(key",{"_index":48,"title":{},"body":{"classes/LRU.html":{}}}],["this.cache.has(key",{"_index":45,"title":{},"body":{"classes/LRU.html":{}}}],["this.cache.set(key",{"_index":50,"title":{},"body":{"classes/LRU.html":{}}}],["this.cache.size",{"_index":53,"title":{},"body":{"classes/LRU.html":{}}}],["this.capacity",{"_index":42,"title":{},"body":{"classes/LRU.html":{}}}],["this.init",{"_index":43,"title":{},"body":{"classes/LRU.html":{}}}],["tofixed",{"_index":86,"title":{},"body":{"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["tort",{"_index":246,"title":{},"body":{"license.html":{}}}],["true",{"_index":133,"title":{},"body":{"index.html":{}}}],["true$math",{"_index":147,"title":{},"body":{"index.html":{}}}],["true/false",{"_index":132,"title":{},"body":{"index.html":{}}}],["true/false$date",{"_index":136,"title":{},"body":{"index.html":{}}}],["truncate",{"_index":161,"title":{},"body":{"index.html":{}}}],["type",{"_index":24,"title":{},"body":{"classes/LRU.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["undefined",{"_index":52,"title":{},"body":{"classes/LRU.html":{}}}],["usage",{"_index":114,"title":{},"body":{"index.html":{}}}],["use",{"_index":204,"title":{},"body":{"license.html":{}}}],["using",{"_index":170,"title":{},"body":{"index.html":{}}}],["utils",{"_index":97,"title":{},"body":{"index.html":{}}}],["value",{"_index":28,"title":{},"body":{"classes/LRU.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":65,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":255,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":92,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["void",{"_index":33,"title":{},"body":{"classes/LRU.html":{},"miscellaneous/variables.html":{}}}],["wang",{"_index":184,"title":{},"body":{"index.html":{}}}],["warranties",{"_index":230,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":225,"title":{},"body":{"license.html":{}}}],["weekday",{"_index":140,"title":{},"body":{"index.html":{}}}],["weekend",{"_index":142,"title":{},"body":{"index.html":{}}}],["weiwei",{"_index":183,"title":{},"body":{"index.html":{}}}],["whether",{"_index":243,"title":{},"body":{"license.html":{}}}],["without",{"_index":199,"title":{},"body":{"license.html":{}}}],["yarn",{"_index":104,"title":{},"body":{"index.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/LRU.html":{"url":"classes/LRU.html","title":"class - LRU","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LRU\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cache/lru.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                cache\n                            \n                            \n                                    Private\n                                capacity\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clear\n                            \n                            \n                                get\n                            \n                            \n                                    Private\n                                init\n                            \n                            \n                                put\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(capacity: number)\n                    \n                \n                        \n                            \n                                Defined in src/cache/lru.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        capacity\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            cache\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Map\n\n                        \n                    \n                    \n                        \n                            Default value : new Map()\n                        \n                    \n                        \n                            \n                                    Defined in src/cache/lru.ts:2\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            capacity\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/cache/lru.ts:3\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clear\n                        \n                        \n                    \n                \n            \n            \n                \nclear()\n                \n            \n\n\n            \n                \n                    Defined in src/cache/lru.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            get\n                        \n                        \n                    \n                \n            \n            \n                \nget(key: number | string)\n                \n            \n\n\n            \n                \n                    Defined in src/cache/lru.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                            number | string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            init\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    init()\n                \n            \n\n\n            \n                \n                    Defined in src/cache/lru.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            put\n                        \n                        \n                    \n                \n            \n            \n                \nput(key: number | string, value: any)\n                \n            \n\n\n            \n                \n                    Defined in src/cache/lru.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                            number | string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class LRU {\n  private cache: Map = new Map();\n  private capacity: number;\n\n  constructor(capacity: number) {\n    this.capacity = capacity;\n    this.init();\n  }\n\n  private init() {\n    this.cache = new Map();\n  }\n\n  get(key: number | string) {\n    if (this.cache.has(key)) {\n      const temp = this.cache.get(key);\n      this.cache.delete(key);\n      this.cache.set(key, temp);\n      return temp;\n    } else {\n      return undefined;\n    }\n  }\n\n  put(key: number | string, value: any) {\n    if (this.cache.has(key)) {\n      this.cache.delete(key);\n    } else if (this.cache.size >= this.capacity) {\n      this.cache.delete(this.cache.keys().next().value);\n    }\n    this.cache.set(key, value);\n  }\n\n  clear() {\n    this.init();\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/cache/lru.ts\n            \n            class\n            LRU\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/core/array/index.ts\n            \n            variable\n            $array\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/array/reverse.ts\n            \n            variable\n            reverse\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/boolean/index.ts\n            \n            variable\n            $boolean\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/boolean/random.ts\n            \n            variable\n            random\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/date/index.ts\n            \n            variable\n            $date\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/date/isWeekday.ts\n            \n            variable\n            isWeekday\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/math/average.ts\n            \n            variable\n            average\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/math/index.ts\n            \n            variable\n            $math\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/number/index.ts\n            \n            variable\n            $number\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/number/isEven.ts\n            \n            variable\n            isEven\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/number/toFixed.ts\n            \n            variable\n            toFixed\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/string/index.ts\n            \n            variable\n            $string\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/string/reverse.ts\n            \n            variable\n            reverse\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/info/name.ts\n            \n            variable\n            PKG_NAME\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/info/version.ts\n            \n            variable\n            VERSION\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n    \n\n\nUtils\n\n\n  \n    \n  \n  \n    \n  \n  \n    \n  \n  \n    \n  \n  \n    \n  \n  \n    \n  \n  \n  \n    \n  \n  \n    \n  \n  \n    \n  \n  \n    \n  \n\n\n\n\n\n\nSome convenience utils.\n\nInstallation\nnpm install --save @dengfengwang/utilsor\nyarn add @dengfengwang/utilsUsage\nYou can import(or require) @dengfengwang/utils by getting it from npm \nimport { $number } from '@dengfengwang/utils';\n\nconst { toFixed } = $number;\n\nconsole.log(toFixed(1.123, 2))Table of contents\n\nInstallation\nUsage\nAPI\n$array\n$boolean\n$date\n$math\n$number\n$string\n\n\n\nAPI\n$array\n.reverse\nReverses an array in place.\nParams\n\narr {Array}: The array to reverse.\nstart {Number}: Starting index.\nend {Number}: Ending index.\n\nExample\nimport { $array } from '@dengfengwang/utils';\nconst { reverse } = $array;\n\nconst arr = [1, 2, 3];\nreverse(arr, 0, arr.length - 1);\nconsole.log(arr);\n//=> [3,2,1]$boolean\n.random\nGet a random boolean (true/false).\nParams\n\nreturns {Boolean}: A boolean (true or false).\n\nExample\nimport { $boolean } from '@dengfengwang/utils';\nconst { random } = $boolean;\n\nconsole.log(random());\n//=> true/false$date\n.isWeekday\nCheck if the provided day is a weekday.\nParams\n\ndate  {Date}: Provided Date.\nreturns {Boolean}: Either a weekday or not(a weekend day).\n\nExample\nimport { $date } from '@dengfengwang/utils';\nconst { isWeekday } = $date;\n\nconsole.log(isWeekday(new Date('2021-05-17T00:00:00')));\n//=> true$math\n.average\nGet average value of arguments.\nParams\n\n...args {Arguments}: Some number arguments.\nreturns {Number}: Average value of the arguments.\n\nExample\nimport { $math } from '@dengfengwang/utils';\nconst { average } = $math;\n\nconsole.log(average(1,2,3));\n//=> 2$number\n.isEven\nCheck if a number is even or odd.\nParams\n\nnum {Number}: Arbitrary integer.\nreturns {Boolean}: Even or not(odd).\n\nExample\nimport { $number } from '@dengfengwang/utils';\nconst { isEven } = $number;\n\nconsole.log(isEven(2));\n//=> true\nconsole.log(isEven(3));\n//=> false.toFixed\nTruncate a number to a fixed decimal point.\nParams\n\nnum {Number}: The needed formatted number.\ndigits {Number}: The number of digits to appear after the decimal point.\nreturns {Boolean}:  The given number using fixed-point notation.\n\nExample\nimport { $number } from '@dengfengwang/utils';\nconst { toFixed } = $number;\n\nconsole.log(toFixed(2.123, 2));\n//=> 2.12$string\n.reverse\nReverse the characters in a string.\nParams\n\nstr {String}: The string to reverse.\nreturns {String} The reversed string.\n\nExample\nimport { $string } from '@dengfengwang/utils';\nconst { reverse } = $string;\n\nconsole.log(reverse(\"abc\"));\n//=> 'cba'License\n\nCopyright (c) 2021-present, Weiwei Wang \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2021 王威威\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    1 Class\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            $array   (src/.../index.ts)\n                        \n                        \n                            $boolean   (src/.../index.ts)\n                        \n                        \n                            $date   (src/.../index.ts)\n                        \n                        \n                            $math   (src/.../index.ts)\n                        \n                        \n                            $number   (src/.../index.ts)\n                        \n                        \n                            $string   (src/.../index.ts)\n                        \n                        \n                            average   (src/.../average.ts)\n                        \n                        \n                            isEven   (src/.../isEven.ts)\n                        \n                        \n                            isWeekday   (src/.../isWeekday.ts)\n                        \n                        \n                            PKG_NAME   (src/.../name.ts)\n                        \n                        \n                            random   (src/.../random.ts)\n                        \n                        \n                            reverse   (src/.../reverse.ts)\n                        \n                        \n                            reverse   (src/.../reverse.ts)\n                        \n                        \n                            toFixed   (src/.../toFixed.ts)\n                        \n                        \n                            VERSION   (src/.../version.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/core/array/index.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            $array\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  reverse,\n}\n                        \n                    \n\n\n            \n        \n\n    src/core/boolean/index.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            $boolean\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  random,\n}\n                        \n                    \n\n\n            \n        \n\n    src/core/date/index.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            $date\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  isWeekday,\n}\n                        \n                    \n\n\n            \n        \n\n    src/core/math/index.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            $math\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  average,\n}\n                        \n                    \n\n\n            \n        \n\n    src/core/number/index.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            $number\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  isEven,\n  toFixed,\n}\n                        \n                    \n\n\n            \n        \n\n    src/core/string/index.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            $string\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  reverse,\n}\n                        \n                    \n\n\n            \n        \n\n    src/core/math/average.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            average\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (...args: number[]): number => {\n  return args.reduce((a: number, b: number) => a + b) / args.length;\n}\n                        \n                    \n\n\n            \n        \n\n    src/core/number/isEven.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            isEven\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (num: number): boolean => {\n  return num % 2 === 0;\n}\n                        \n                    \n\n\n            \n        \n\n    src/core/date/isWeekday.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            isWeekday\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (date: Date): boolean => {\n  return date.getDay() % 6 !== 0;\n}\n                        \n                    \n\n\n            \n        \n\n    src/info/name.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            PKG_NAME\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '__NAME__'\n                        \n                    \n\n\n            \n        \n\n    src/core/boolean/random.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            random\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (): boolean => {\n  return Math.random() >= 0.5;\n}\n                        \n                    \n\n\n            \n        \n\n    src/core/array/reverse.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            reverse\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (arr: any[], start: number, end: number): void => {\n  while (start \n                        \n                    \n\n\n            \n        \n\n    src/core/string/reverse.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            reverse\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (str: string): string => {\n  // return str.split('').reverse().join('')\n  let reversedStr = '';\n\n  for (let i = str.length - 1; i >= 0; i--) {\n    reversedStr += str[i];\n  }\n\n  return reversedStr;\n}\n                        \n                    \n\n\n            \n        \n\n    src/core/number/toFixed.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            toFixed\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (num: number, digits: number): number => {\n  return Math.floor(Math.pow(10, digits) * num) / Math.pow(10, digits);\n}\n                        \n                    \n\n\n            \n        \n\n    src/info/version.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            VERSION\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '__VERSION__'\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
